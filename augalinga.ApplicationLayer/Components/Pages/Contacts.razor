@page "/contacts"
@using augalinga.ApplicationLayer.Components.ViewModels
@using augalinga.Data.Entities
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using augalinga.Data.Access
@inject NavigationManager Navigation
@inject IJSRuntime JS

<div class="header">
    <div style="flex: 1">
        <button @onclick="GoBack" class="back-button"><i class="bi bi-arrow-left h2"></i></button>
    </div>
    <h1>Contacts</h1>
    <div style="flex: 1; display: flex; justify-content: flex-end;">
        <button class="add-button" @onclick="OpenModal"><i class="bi bi-plus-lg h2"></i></button>
    </div>
</div>

<div class="modal show" style="display:none;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add a transaction</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close" @onclick="HideModal"></button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="category">Choose a category:</label>
                            <select name="categories" id="categories" @bind="contact.Category">
                                <option value="Nurseries">Nurseries</option>
                                <option value="Transport">Transport</option>
                                <option value="Manufacture">Manufacture</option>
                                <option value="Colleagues">Colleagues</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="contactName">Name:</label>
                            <input type="text" class="form-control" id="contactName" @bind="contact.Name" required />
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group">
                            <label for="contactNumber">Number:</label>
                            <input type="text" class="form-control" id="contactNumber" inputmode="tel" @bind="contact.Number" required/>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="contactAddress">Address:</label>
                            <input type="text" class="form-control" id="contactAddress" @bind="contact.Address" />
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col">
                        <div class="form-group">
                            <label for="contactNotes">Notes:</label>
                            <input type="text" multiple="true" class="form-control" id="contactNotes" @bind="contact.Notes" />
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="AddContact">Submit</button>
            </div>
        </div>
    </div>
</div>

<div class="main-wrapper">
    <div class="container">
        <NavLink href="contactsPage/Nurseries" style="text-decoration:none;">
            <div class="card">
                <img class="card-img-top" src="../images/nurseries.png" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">Nurseries</h5>
                </div>
            </div>
        </NavLink>
        <NavLink href="contactsPage/Transport" style="text-decoration:none;">
            <div class="card">
                <img class="card-img-top" src="../images/transport.png" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">Transport</h5>
                </div>
            </div>
        </NavLink>
        <NavLink href="contactsPage/Manufacture" style="text-decoration:none;">
            <div class="card">
                <img class="card-img-top" src="../images/manufacture.png" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">Manufacture</h5>
                </div>
            </div>
        </NavLink>
        <NavLink href="contactsPage/Colleagues" style="text-decoration:none;">
            <div class="card">
                <img class="card-img-top" src="../images/colleagues.png" alt="Card image cap">
                <div class="card-body">
                    <h5 class="card-title">Colleagues</h5>
                </div>
            </div>
        </NavLink>
    </div>
</div>

@code {
    ContactsViewModel contactsViewModel { get; set; } = new ContactsViewModel();
    private DataContext dbContext { get; set; } = new DataContext();
    Contact contact = new Contact();

    protected override void OnInitialized()
    {
        contact.Number = "+370";
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/");
    }
    private async Task DeleteContact(Contact contact)
    {
        dbContext.Contacts.Remove(contact);
        await dbContext.SaveChangesAsync();
        contactsViewModel.Contacts.Remove(contact);
    }

    private async void AddContact()
    {
        contact.Category = contact.Category;
        if (contact.Notes == null)
        {
            contact.Notes = "";
        }
        if (contact.Address == null)
        {
            contact.Address = "";
        }
        dbContext.Contacts.Add(contact);
        await dbContext.SaveChangesAsync();
        contactsViewModel.Contacts.Add(contact);
        await HideModal();
    }

    public async Task OpenModal()
    {
        await JS.InvokeVoidAsync("showModal");
    }

    public async Task HideModal()
    {
        await JS.InvokeVoidAsync("hideModal");
    }
}
<script>
    window.showModal = () => {
        const modal = document.querySelector('.modal');
        if (modal) {
            modal.style.display = 'block';
        }
    };

    window.hideModal = () => {
        const modal = document.querySelector('.modal');
        if (modal) {
            modal.style.display = 'none';
        }
    };
</script>


<style>
    .delete-icon-container {
        display: flex;
        justify-content: center;
        align-items: center;
        height: 100%;
    }

    .main-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        box-sizing: border-box;
        padding: 20px;
        height: 80vh;
    }

    .container {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        justify-items: center;
        width: 100%;
        box-sizing: border-box;
    }

    .card {
        width: 100%;
        text-decoration: none;
        border: 1px solid #ccc;
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
        transition: transform 0.3s;
        background-color: #f7f7f7;
    }

        .card:hover {
            transform: scale(1.05);
        }

        .card img {
            width: 100%;
            height: auto;
            padding: 20px;
        }

    .card-body {
        padding: 10px;
        text-align: center;
        border-top: 1px solid black;
        margin-top: 10px;
        text-decoration:none;
    }

    .card-title {
        margin: 0;
        text-decoration: none !important;
        font-size: 2rem;
        color: #333;
    }

    .card a {
        text-decoration: none;
        color: black;
    }

        .card a:hover {
            text-decoration: none;
            color: black;
        }

    @@media screen and (max-width: 768px) {
        .main-wrapper {
            height: auto;
        }
    }
</style>
