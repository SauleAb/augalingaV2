@page "/projectFinances/{projectName}"

@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using augalinga.ApplicationLayer.Components.ViewModels
@using augalinga.Data.Entities
@inject IJSRuntime JS
@inject NavigationManager Navigation

<div class="header">
    <div class="header">
        <div style="flex: 1">
            <button @onclick="GoBack" class="back-button">Back</button>
        </div>
        <h1>@projectName Finances</h1>
        <div style="flex: 1; display: flex; justify-content: flex-end;">
            <button class="button" style="margin: 10px; width: 50px; height: 50px; border-radius: 25px;">+</button> <!--@onclick="OpenModal()"-->
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="card">
            <div class="label">Income</div>
            <div class="amount">2587€</div>
        </div>
        <div class="card">
            <div class="label">Outcome</div>
            <div class="amount">1400€</div>
        </div>
        <div class="card">
            <div class="label">Total</div>
            <div class="amount">1187€</div>
        </div>
    </div>
    <SfGrid DataSource="@expensesViewModel.Expenses" AllowPaging="true" AllowSelection="true" OnRowSelected="OnRowSelected">
    </SfGrid>
    <button onclick="DeleteButton_Clicked()" class="delete-button">Delete</button>
</div>

<div class="modal show" tabindex="-1" style="display:block;">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Select Delivery Date</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="AddFinance">Submit</button>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string projectName { get; set; }

    ExpensesViewModel expensesViewModel;

    protected override void OnInitialized()
    {
        expensesViewModel = new ExpensesViewModel(projectName);
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/projectMenu/{projectName}");
    }

    private async Task AddFinance()
    {
    }

    private async Task OpenModal()
    {
        await JS.InvokeVoidAsync("showModal");        
    }

}

<style>
    .back-button {
        background-color: #518478;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        margin-bottom: 20px;
    }

    .back-button:hover {
        background-color: #405955;
    }

    .header {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        padding: 10px;
    }

    .container {
        display: flex;
        flex-direction: column;
        height: 100%;
    }

    .header {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 70px;
    }

    .title {
        font-size: 60px;
        font-family: 'TitleFont';
    }

    .row {
        display: flex;
        flex-wrap: wrap;
        justify-content: center;
        margin-top: 10px;
        flex-grow: 1;
    }

    .card {
        width: 300px;
        height: 200px;
        margin: 10px;
        padding: 20px;
        border-radius: 40px;
        background-color: #EFE9DC;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }

        .card:nth-child(odd) {
            background-color: #FFFFFF;
        }

    .label {
        font-size: 40px;
        font-family: 'AppFont';
        text-align: center;
        margin-bottom: 20px;
    }

    .amount {
        font-size: 50px;
        font-family: 'AppFont';
        text-align: center;
    }

    .data-grid {
        width: 800px;
        margin-top: 30px;
        align-self: center;
    }

    .delete-button {
        align-self: flex-end;
        margin: 10px;
        width: 50px;
        height: 50px;
    }

    @@media only screen and (max-width: 600px) {
    .card {
        width: calc(100% - 20px);
    }
}

    @@media only screen and (max-width: 600px) {
    .label {
        font-size: 30px;
    }

    .amount {
        font-size: 40px;
    }
}
</style>