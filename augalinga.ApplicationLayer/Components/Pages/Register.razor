@page "/register"
@using augalinga.Backend.ViewModels
@using augalinga.Backend.Services
@inject NavigationManager Navigation
@inject IJSRuntime JS
@inject IAuthService AuthService

<div class="container">
    <div class="header">
    <h1>User Registration</h1>
</div>
    <EditForm Model="registerViewModel" OnValidSubmit="HandleRegister">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="username">Full Name:</label>
            <InputText id="username" class="form-control" @bind-Value="registerViewModel.FullName" />
            <ValidationMessage For="@(() => registerViewModel.FullName)" />
        </div>

        <div class="form-group">
            <label for="email">Email:</label>
            <InputText id="email" type="email" class="form-control" @bind-Value="registerViewModel.Email" />
            <ValidationMessage For="@(() => registerViewModel.Email)" />
        </div>

        <div class="form-group">
            <label for="password">Password:</label>
            <InputText id="password" type="password" class="form-control" @bind-Value="registerViewModel.Password" />
            <ValidationMessage For="@(() => registerViewModel.Password)" />
        </div>

        <div class="form-group">
            <label for="background">Pick a Color:</label>
            <InputText id="background" type="color" class="form-control" @bind-Value="registerViewModel.Background" />
        </div>

        <button type="submit" class="btn btn-primary margin">Register</button>
    </EditForm>

    <div class="mt-3">
        <button class="btn btn-link" @onclick="NavigateToLogin">Have an account? Login</button>
    </div>
</div>

@code {
    private UserRegisterViewModel registerViewModel = new UserRegisterViewModel();

    private async Task HandleRegister()
    {
        var registrationSuccessful = await AuthService.RegisterUser(registerViewModel);
        if (registrationSuccessful)
        {
            Navigation.NavigateTo("/login");
        }
        else
        {
            await JS.InvokeVoidAsync("alert", "Registration failed. Email already exists or other issue.");
        }
    }

    private void NavigateToLogin()
    {
        Navigation.NavigateTo("/login");
    }
}

<style>
    .margin {
        margin-top: 20px;
    }
</style>
