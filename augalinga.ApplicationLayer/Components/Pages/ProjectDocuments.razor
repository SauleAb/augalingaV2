@page "/projectDocuments/{projectName}"
@using Syncfusion.Blazor
@using Syncfusion.Blazor.Grids
@using augalinga.ApplicationLayer.Components.ViewModels
@using augalinga.Data.Access
@using augalinga.Data.Entities
@using Syncfusion.Blazor.Popups
@inject NavigationManager Navigation
@using Amazon;
@using Amazon.S3;
@using Amazon.S3.Model;
@using Syncfusion.Blazor.Inputs
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.Maui.Controls
@using System.Text.Json

<div class="header">
    <button @onclick="GoBack" class="back-button">Back</button>
    <h1>@projectName Documents</h1>
    <button @onclick="OpenDialog" class="add-button">Add</button>
</div>

<SfGrid DataSource="@documentsViewModel.Documents" AllowPaging="true" AllowSelection="true" @ref="documentsDataGrid" OnRowSelected="OnRowSelected">
    <GridColumns>
        <GridColumn Field=@nameof(Document.Name) HeaderText="Name"></GridColumn>
        <GridColumn Field=@nameof(Document.Link) HeaderText="Link"></GridColumn>
    </GridColumns>
</SfGrid>

<SfDialog Width="500px" IsModal="true" ShowCloseIcon="true" @bind-Visible="Visibility" Header="Upload Document">
    <DialogTemplates>
        <Header> Dialog </Header>
        <Content>
            <div class="form-group">
                <label for="fileInput">Select file:</label>
                <InputFile id="fileInput" OnChange="HandleFileSelect" multiple />
                <ul>
                    @if (selectedFiles.Any())
                    {
                        @foreach (var file in selectedFiles)
                        {
                            <li>@file.Name</li>
                        }
                    }
                </ul>
            </div>
            <div class="footer">
                <button disabled="@(!IsRowSelected)" @onclick="DeleteFile" class="delete-button">Delete</button>
            </div>
            @if (!string.IsNullOrEmpty(errorMessage))
            {
                <div class="alert alert-danger">@errorMessage</div>
            }
        </Content>
    </DialogTemplates>
</SfDialog>

<div class="footer">
    <button disabled="@(!IsRowSelected)" @onclick="async () => await DeleteFile()" class="delete-button">Delete</button>
</div>

@code {
    [Parameter]
    public string projectName { get; set; }

    DocumentsViewModel documentsViewModel;
    SfDialog documentDialog;
    string bucket = "augalinga-app";
    string folder = "documents/";
    IAmazonS3 s3Client = new AmazonS3Client(RegionEndpoint.EUNorth1);
    public DataContext context { get; set; } = new DataContext();
    private List<IBrowserFile> selectedFiles = new List<IBrowserFile>();
    private string errorMessage;
    private Document selectedDocument;
    SfGrid<Document> documentsDataGrid { get; set; }
    private bool IsRowSelected { get; set; } = false;

    protected override void OnInitialized()
    {
        documentsViewModel = new DocumentsViewModel(projectName);
    }

    private bool Visibility { get; set; } = false;
    private void OpenDialog()
    {
        this.Visibility = true;
        errorMessage = string.Empty;
    }

    private void GoBack()
    {
        Navigation.NavigateTo($"/projectMenu/{projectName}");
    }

    private void OnRowSelected(RowSelectEventArgs<Document> args)
    {
        selectedDocument = args.Data as Document;
        IsRowSelected = selectedDocument != null;
    }

    private async Task DeleteFile()
    {
        if (selectedDocument != null)
        {
            string link = selectedDocument.Link;
            documentsViewModel.RemoveDocument(link);
            context.Documents.Remove(selectedDocument);
            await context.SaveChangesAsync();
            await s3Client.DeleteObjectAsync(new DeleteObjectRequest
                {
                    BucketName = bucket,
                    Key = $"{projectName}/{folder}{selectedDocument.Name}"
                });
            selectedDocument = null;
            IsRowSelected = false;
        }
    }

    private void HandleFileSelect(InputFileChangeEventArgs e)
    {
        selectedFiles = e.GetMultipleFiles().ToList();
    }

    private async Task UploadFiles()
    {
        errorMessage = string.Empty;
        try
        {
            foreach (var file in selectedFiles)
            {
                string objectKey = $"{projectName}/{folder}{file.Name}";

                const long maxFileSize = 1073741824; // 1 GB
                using var stream = file.OpenReadStream(maxFileSize);
                var request = new PutObjectRequest
                    {
                        BucketName = bucket,
                        Key = objectKey,
                        InputStream = stream
                    };
                await s3Client.PutObjectAsync(request);

                var newDocument = new Document
                    {
                        Project = projectName,
                        Link = $"https://{bucket}.s3.amazonaws.com/{objectKey}",
                        Name = file.Name
                    };
                documentsViewModel.AddDocumentToCollection(newDocument);
                await context.Documents.AddAsync(newDocument);
                await context.SaveChangesAsync();
            }
            Visibility = false;
            selectedFiles.Clear();
        }
        catch (AmazonS3Exception s3Ex)
        {
            errorMessage = $"S3 Error: {s3Ex.Message}";
            Console.WriteLine($"S3 Error: {s3Ex}");
        }
        catch (Exception ex)
        {
            errorMessage = $"An error occurred: {ex.Message}";
            Console.WriteLine($"General Error: {ex}");
        }
    }
}

<style>
    .back-button {
        background-color: #518478;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
        margin-bottom: 20px;
    }

        .back-button:hover {
            background-color: #405955;
        }

    .header {
        display: flex;
        flex-direction: row;
        align-items: center;
        justify-content: space-between;
        padding: 10px;
    }

    .add-button {
        background-color: #518478;
        color: white;
        border: none;
        border-radius: 5px;
        padding: 10px 20px;
        font-size: 16px;
        cursor: pointer;
    }

        .add-button:hover {
            background-color: #405955;
        }

</style>
